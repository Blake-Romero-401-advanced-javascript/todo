{"ast":null,"code":"var _jsxFileName = \"/home/bromero/codefellows/401/todo/src/components/todo/todo.js\";\nimport React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport axios from 'axios';\nimport './todo.scss';\nexport default function ToDo() {\n  const [list, setList] = useState([]); // const [item, setItem] = useState({});\n\n  const addItem = item => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n    addNewTask(item);\n  };\n\n  const toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete; // setItem(item);\n\n      let newString = item.complete.toString();\n      dbToggleStatus(newString);\n      let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(newList);\n    }\n  };\n\n  function removeTask(id) {\n    let reducedList = list.filter(i => i._id !== id) || {};\n    console.log('ID?', id);\n    console.log('List Shape:', list);\n    console.log('List After Delete:', reducedList);\n  }\n\n  async function getStoredTasks() {\n    const response = await axios.get('http://localhost:3001/api/v1/todos');\n    setList(response.data);\n  }\n\n  async function addNewTask(item) {\n    await axios.post('http://localhost:3001/api/v1/todos', {\n      text: item.txt,\n      asignee: item.assignee,\n      complete: item.complete,\n      difficulty: item.difficulty\n    });\n  }\n\n  async function dbToggleStatus(id, status) {\n    await axios.put(`http://localhost:3001/api/v1/todos/${id}`, {\n      complete: status\n    });\n  } // useEffect(() => {\n  //   let newList = [\n  //     { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n  //     { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n  //     { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n  //     { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n  //     { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n  //   ];\n  //   setList(newList);\n  // }, []);\n\n\n  useEffect(() => {\n    getStoredTasks();\n  }, []);\n  useEffect(() => {\n    document.title = `To Do List: ${list.length}`;\n  }, [list]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    className: \"mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, \"ToDo List Manager (\", list.filter(item => !item.complete).length, \")\")))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    handleSubmit: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    handleComplete: toggleComplete,\n    handleDelete: removeTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["/home/bromero/codefellows/401/todo/src/components/todo/todo.js"],"names":["React","useEffect","useState","TodoForm","TodoList","Row","Col","Navbar","Nav","Container","axios","ToDo","list","setList","addItem","item","_id","Math","random","complete","addNewTask","toggleComplete","id","filter","i","newString","toString","dbToggleStatus","newList","map","listItem","removeTask","reducedList","console","log","getStoredTasks","response","get","data","post","text","txt","asignee","assignee","difficulty","status","put","document","title","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\n\nimport axios from 'axios';\n\nimport './todo.scss';\n\nexport default function ToDo() {\n\n  const [list, setList] = useState([]);\n  // const [item, setItem] = useState({});\n\n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n    addNewTask(item);\n  };\n\n  const toggleComplete = id => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      // setItem(item);\n      let newString = item.complete.toString();\n      dbToggleStatus(newString);\n      let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(newList);\n    }\n\n  };\n\n  function removeTask(id) {\n    let reducedList = list.filter(i => i._id !== id) || {};\n    console.log('ID?', id);\n    console.log('List Shape:', list);\n    console.log('List After Delete:', reducedList);\n  }\n\n  async function getStoredTasks() {\n    const response = await axios.get('http://localhost:3001/api/v1/todos');\n    setList(response.data);\n  }\n\n  async function addNewTask(item) {\n    await axios.post('http://localhost:3001/api/v1/todos', {\n      text: item.txt,\n      asignee: item.assignee,\n      complete: item.complete,\n      difficulty: item.difficulty,\n    });\n  }\n\n  async function dbToggleStatus(id, status) {\n    await axios.put(`http://localhost:3001/api/v1/todos/${id}`, {complete: status});\n  }\n\n  // useEffect(() => {\n  //   let newList = [\n  //     { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n  //     { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n  //     { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n  //     { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n  //     { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n  //   ];\n\n  //   setList(newList);\n  // }, []);\n\n  useEffect(() => {\n    getStoredTasks();\n  }, []);\n\n  useEffect(() => {\n    document.title = `To Do List: ${list.length}`\n  }, [list]);\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col>\n\n            <header>\n              <Navbar bg=\"dark\" variant=\"dark\">\n                <Nav className=\"mr-auto\">\n                  <Navbar.Brand>\n                    ToDo List Manager ({list.filter(item => !item.complete).length})\n                    {/* list.length */}\n                  </Navbar.Brand>\n                </Nav>\n              </Navbar>\n            </header>\n\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={4}>\n            <div>\n              <TodoForm handleSubmit={addItem} />\n            </div>\n          </Col>\n\n          <Col md={8}>\n            <div>\n              <TodoList\n                list={list}\n                handleComplete={toggleComplete}\n                handleDelete={removeTask}\n              />\n            </div>\n          </Col>\n        </Row>\n          \n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}