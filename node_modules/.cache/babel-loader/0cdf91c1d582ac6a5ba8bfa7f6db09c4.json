{"ast":null,"code":"var _jsxFileName = \"/home/bromero/codefellows/401/todo/src/components/todo/todo.js\";\nimport React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport './todo.scss';\n\nfunction ToDo(props) {\n  const [list, setList] = useState([]);\n\n  const addItem = item => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n  const toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete; // setItem(item);\n      // dbToggleStatus(item);\n\n      let list = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(list);\n    }\n  };\n\n  useEffect(() => {\n    let newList = [{\n      _id: 1,\n      complete: false,\n      text: 'Clean the Kitchen',\n      difficulty: 3,\n      assignee: 'Person A'\n    }, {\n      _id: 2,\n      complete: false,\n      text: 'Do the Laundry',\n      difficulty: 2,\n      assignee: 'Person A'\n    }, {\n      _id: 3,\n      complete: false,\n      text: 'Walk the Dog',\n      difficulty: 4,\n      assignee: 'Person B'\n    }, {\n      _id: 4,\n      complete: true,\n      text: 'Do Homework',\n      difficulty: 3,\n      assignee: 'Person C'\n    }, {\n      _id: 5,\n      complete: false,\n      text: 'Take a Nap',\n      difficulty: 1,\n      assignee: 'Person B'\n    }];\n    setList(newList);\n  }, []);\n  useEffect(() => {\n    document.title = `To Do List: ${list.length}`;\n  }, [list]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    className: \"mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, \"ToDo List Manager (\", list.length, \")\")))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    handleSubmit: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    handleComplete: toggleComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default ToDo;","map":{"version":3,"sources":["/home/bromero/codefellows/401/todo/src/components/todo/todo.js"],"names":["React","useEffect","useState","TodoForm","TodoList","Row","Col","Navbar","Nav","Container","ToDo","props","list","setList","addItem","item","_id","Math","random","complete","toggleComplete","id","filter","i","map","listItem","newList","text","difficulty","assignee","document","title","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\n\nimport './todo.scss';\n\nfunction ToDo(props) {\n\n  const [ list, setList ] = useState([]);\n\n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([ ...list, item]);\n  };\n\n  const toggleComplete = id => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      // setItem(item);\n      // dbToggleStatus(item);\n      let list = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(list);\n    }\n\n  };\n\n  useEffect(() => {\n    let newList = [\n      { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A'},\n      { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A'},\n      { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B'},\n      { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C'},\n      { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B'},\n    ];\n\n    setList(newList);\n  }, []);\n\n  useEffect(() => {\n    document.title = `To Do List: ${list.length}`\n  }, [list]);\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col>\n\n            <header>\n              <Navbar bg=\"dark\" variant=\"dark\">\n                <Nav className=\"mr-auto\">\n                  <Navbar.Brand>\n                    ToDo List Manager ({list.length})\n                    {/* list.filter(item => !item.complete).length */}\n                  </Navbar.Brand>\n                </Nav>\n              </Navbar>\n            </header>\n\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={4}>\n            <div>\n              <TodoForm handleSubmit={addItem} />\n            </div>\n          </Col>\n\n          <Col md={8}>\n            <div>\n              <TodoList\n                list={list}\n                handleComplete={toggleComplete}\n                />\n            </div>\n          </Col>\n        </Row>\n          \n      </Container>\n    </>\n  );\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}